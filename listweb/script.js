let customIndex = 0;

function goToPage1() {
  showPage("page1");
}
function goToPage2() {
  showPage("page2");
}
function goToPage3() {
  calculate();

  const name = document.getElementById("customerName").value || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
  const contact = document.getElementById("contactInfo").value || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
  const date = document.getElementById("pickupDate").value;

  if (date) addToCalendar(name, contact, date);

  showPage("page3");
}

function showPage(id) {
  ["page1", "page2", "page3"].forEach(p => {
    document.getElementById(p).style.display = (p === id) ? "block" : "none";
  });
}

function addCustom() {
  customIndex++;
  const div = document.createElement('div');
  div.className = 'custom-person';
  div.innerHTML = `
    <label>‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà Custom:
      <input type="text" name="customName" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà ${customIndex}">
    </label>

    <label>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û:
      <input type="text" name="imageCode" placeholder="‡πÄ‡∏ä‡πà‡∏ô IMG_1234">
    </label>

    <div class="custom-options">
      <label><input type="checkbox" class="customOption" data-label="‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ú‡∏°"> ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ú‡∏° (+100‡∏ø)</label><br>
      <label><input type="checkbox" class="customOption" data-label="‡∏£‡∏µ‡∏ó‡∏±‡∏ä‡∏™‡∏¥‡∏ß / ‡∏à‡∏∏‡∏î‡∏î‡πà‡∏≤‡∏á‡∏î‡∏≥"> ‡∏£‡∏µ‡∏ó‡∏±‡∏ä‡∏™‡∏¥‡∏ß / ‡∏à‡∏∏‡∏î‡∏î‡πà‡∏≤‡∏á‡∏î‡∏≥ (+100‡∏ø)</label><br>
      <label><input type="checkbox" class="customOption" data-label="‡∏õ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏ß‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô"> ‡∏õ‡∏£‡∏±‡∏ö‡∏ú‡∏¥‡∏ß‡πÄ‡∏ô‡∏µ‡∏¢‡∏ô (+100‡∏ø)</label><br>
      <label><input type="checkbox" class="customOption" data-label="‡∏õ‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ß / ‡∏•‡∏î‡πÅ‡∏Å‡πâ‡∏°"> ‡∏õ‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏£‡∏µ‡∏¢‡∏ß / ‡∏•‡∏î‡πÅ‡∏Å‡πâ‡∏° (+100‡∏ø)</label><br>
      <label><input type="checkbox" class="customOption" data-label="‡∏£‡∏µ‡∏ó‡∏±‡∏ä‡∏õ‡∏≤‡∏Å / ‡∏ü‡∏±‡∏ô‡∏Ç‡∏≤‡∏ß"> ‡∏£‡∏µ‡∏ó‡∏±‡∏ä‡∏õ‡∏≤‡∏Å / ‡∏ü‡∏±‡∏ô‡∏Ç‡∏≤‡∏ß (+100‡∏ø)</label><br>
      <label><input type="checkbox" class="customOption" data-label="‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏¥‡πâ‡∏ß / ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏¥‡πâ‡∏ß"> ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏¥‡πâ‡∏ß / ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ñ‡∏¥‡πâ‡∏ß (+100‡∏ø)</label><br><br>

      <label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ó‡∏£‡∏á‡∏ú‡∏°:
        <select class="hairStyleSelect">
          <option value="">- ‡πÑ‡∏°‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å -</option>
          <option value="HS01">HS01</option>
          <option value="HS02">HS02</option>
          <option value="HS03">HS03</option>
          <option value="HS04">HS04</option>
          <option value="HS05">HS05</option>
          <option value="HS06">HS06</option>
          <option value="HS07">HS07</option>
          <option value="HS08">HS08</option>
          <option value="HS09">HS09</option>
          <option value="HS10">HS10</option>
        </select> (+100‡∏ø)
      </label>
    </div>

    <button class="remove-button" onclick="removeCustom(this)">‚ùå ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ</button>
  `;
  document.getElementById('customList').appendChild(div);
}

function removeCustom(button) {
  const block = button.closest(".custom-person");
  if (block) block.remove();
}

function calculate() {
  const name = document.getElementById("customerName").value || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
  const people = Math.max(1, parseInt(document.getElementById("peopleCount").value) || 1);
  const pickupDate = document.getElementById("pickupDate")?.value || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
  const contactInfo = document.getElementById("contactInfo")?.value || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏";
  const basePrice = 350;

  let customTotal = 0;
  let customDetails = "";
  const blocks = document.querySelectorAll(".custom-person");

  blocks.forEach((block, i) => {
    const cname = block.querySelector("input[name='customName']").value || `‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà ${i + 1}`;
    const imageCode = block.querySelector("input[name='imageCode']").value || "-";
    const options = block.querySelectorAll(".customOption");
    const hairStyleCode = block.querySelector(".hairStyleSelect").value;

    let subtotal = 0;
    const desc = [];

    options.forEach(opt => {
      if (opt.checked) {
        subtotal += 100;
        desc.push(opt.dataset.label);
      }
    });

    if (hairStyleCode) {
      subtotal += 100;
      desc.push(`‡∏ó‡∏£‡∏á‡∏ú‡∏°‡∏£‡∏´‡∏±‡∏™ ${hairStyleCode}`);
    }

    customTotal += subtotal;
    customDetails += `${cname} (‡πÑ‡∏ü‡∏•‡πå: ${imageCode}): ${desc.join(", ") || "‡πÑ‡∏°‡πà‡∏°‡∏µ"} (+${subtotal}‡∏ø)<br>`;
  });

  const baseTotal = basePrice * people;
  const total = baseTotal + customTotal;
  const promptPayNumber = "0812345678";
  const qrUrl = `https://promptpay.io/${promptPayNumber}/${total}`;

  document.getElementById("result").innerHTML = `
    <b>‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:</b> ${name}<br>
    <b>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏ô:</b> ${people}<br>
    <b>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ:</b> ${pickupDate}<br>
    <b>‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:</b> ${contactInfo}<br><br>

    <b>‡∏ñ‡πà‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô:</b> ${basePrice} √ó ${people} = ${baseTotal}‡∏ø<br><br>
    <b><u>Custom ‡∏£‡∏≤‡∏¢‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•:</u></b><br>
    ${customDetails || "- ‡πÑ‡∏°‡πà‡∏°‡∏µ -"}<br>
    <hr>
    <b>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${total} ‡∏ö‡∏≤‡∏ó</b>

    <div style="margin-top:20px; text-align:center;">
      <b>‡∏™‡πÅ‡∏Å‡∏ô‡∏à‡πà‡∏≤‡∏¢‡∏ú‡πà‡∏≤‡∏ô PromptPay</b><br>
      <img src="${qrUrl}" alt="QR PromptPay" style="margin-top:8px; width:200px; height:auto;">
    </div>
  `;
}

function downloadImage() {
  html2canvas(document.querySelector("#result")).then(canvas => {
    const link = document.createElement("a");
    link.download = "‡πÉ‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î.png";
    link.href = canvas.toDataURL();
    link.click();
  });
}

// =====================
// GOOGLE CALENDAR
// =====================
const CLIENT_ID = 'YOUR_CLIENT_ID.apps.googleusercontent.com';
const API_KEY = 'YOUR_API_KEY';
const SCOPES = "https://www.googleapis.com/auth/calendar.events";

function initCalendarAPI() {
  gapi.client.init({
    apiKey: API_KEY,
    clientId: CLIENT_ID,
    discoveryDocs: ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"],
    scope: SCOPES,
  }).then(() => {
    return gapi.auth2.getAuthInstance().signIn();
  }).catch((err) => {
    alert("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Google Calendar ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: " + err.details);
  });
}

function addToCalendar(name, contact, date) {
  const event = {
    summary: `üì∏ ‡∏ô‡∏±‡∏î‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ: ${name}`,
    description: `‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: ${contact}`,
    start: { date: date },
    end: { date: date },
  };

  gapi.client.calendar.events.insert({
    calendarId: 'primary',
    resource: event,
  }).then(response => {
    alert("‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏î‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏•‡∏á Google Calendar ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
  }).catch(error => {
    alert("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å: " + error.message);
  });
}

gapi.load('client:auth2', initCalendarAPI);
